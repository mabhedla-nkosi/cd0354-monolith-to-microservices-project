language: node_js
node_js:
  - 16

services:
  - docker

# Pre-testing installs
install:
  - echo "nothing needs to be installed"

# Scripts to be run such as tests
before_script:
  - echo "no tests"

script:
  - docker --version # print the version for logging
  # Assuming the .travis.yml file is in the project directory, and there is a separate sub-directory for each service
  # Use either `docker-compose` or individual `docker build` commands
  # Build
  - docker build -t udagram-api-feed ./udagram-api-feed
  - docker tag udagram-api-feed mabhedlankosi/udagram-api-feed:v1
  - docker build -t udagram-api-user ./udagram-api-user
  - docker tag udagram-api-user mabhedlankosi/udagram-api-user:v1
  - docker build -t udagram-frontend ./udagram-frontend
  - docker tag udagram-frontend mabhedlankosi/udagram-frontend:v1
  - docker build -t reverseproxy ./udagram-reverseproxy	
  - docker tag reverseproxy mabhedlankosi/reverseproxy:v1
  # Do similar for other three images

  # Tagging
  # Do similar for other three images


  # Tasks to perform after the process is successful. Formatting the Docker username and password as below enables you to programmatically log in without having the password exposed in logs.
after_success:
  # Push
  # Assuming DOCKER_PASSWORD and DOCKER_USERNAME are set in the Travis repository settings
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  - docker push mabhedlankosi/udagram-api-feed:v1
  - docker push mabhedlankosi/udagram-api-user:v1
  - docker push mabhedlankosi/udagram-frontend:v1
  - docker push mabhedlankosi/reverseproxy:v1
  # Do similar for other three images